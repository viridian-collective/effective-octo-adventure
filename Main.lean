import Example

/-
We are building the Abstract Model of UTXO-based Cryptocurrencies with Scripts in lean.
In the UTXO-based style, transactions inductively spend outputs generated by previous transactions and create new unspent outputs, and there is no intrinsic notion of account associated with an address.
-/

-- 1. A ledger is a list of valid transactions
def Ledger := List UtxoTx

-- 2. The datatype for UTXO-based transactions is defined
def UtxoTx := {
  --TODO
  }

/-  
  - [ ] 3. The function tx : Input → Ledger → Option[UtxoTx]
  - [ ] 4. The unspent outputs of a transaction can be computed by applying the following function 
  - [ ] 5. The set of unspent outputs of a ledger 
  - [ ] 6. A UTXO-based transaction t is valid
  - [ ] 7. The UTXO-balance of an address in a transaction
  - [ ] 8. The UTXO-balance of an address a in a ledger

-/

def main : IO Unit := do

  let stdout ← IO.getStdout

  stdout.putStrLn s!"{hello}'s Perfect Arithmetics Class has begun!"
  stdout.putStrLn s!"We are at M1: Foundations"
  stdout.putStrLn s!"Look at "
